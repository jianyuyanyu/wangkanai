name: warnings-check

on:
  pull_request:
    branches: [ "main" ]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  check-warnings:
    runs-on: ubuntu-latest
    
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-warnings-${{ hashFiles('**/Directory.Packages.props', '**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x
          
    - name: Restore
      run: dotnet restore
      
    - name: Build with warnings as errors
      id: build-strict
      run: |
        set +e  # Don't exit on error
        OUTPUT=$(dotnet build -c Release --no-restore /p:TreatWarningsAsErrors=true 2>&1)
        EXIT_CODE=$?
        echo "$OUTPUT"
        
        if [ $EXIT_CODE -ne 0 ]; then
          echo "::warning::Build contains warnings that should be addressed"
          echo "has_warnings=true" >> $GITHUB_OUTPUT
          
          # Extract warning count
          WARNING_COUNT=$(echo "$OUTPUT" | grep -c "warning CS")
          echo "::warning::Found $WARNING_COUNT compiler warnings"
          
          # Create a summary
          echo "## ⚠️ Build Warnings Detected" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The build completed with $WARNING_COUNT warnings when treated as errors." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "While the main CI pipeline allows warnings to ensure stability, " >> $GITHUB_STEP_SUMMARY
          echo "please address these warnings to maintain code quality." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "<details>" >> $GITHUB_STEP_SUMMARY
          echo "<summary>View warnings</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$OUTPUT" | grep "warning CS" | head -20 >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY
        else
          echo "has_warnings=false" >> $GITHUB_OUTPUT
          echo "## ✅ Build completed with no warnings" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Comment PR
      if: steps.build-strict.outputs.has_warnings == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.name,
            body: '⚠️ **Build Warnings Detected**\n\nThis PR introduces compiler warnings. While the main CI allows warnings for stability, please consider addressing them for better code quality.\n\nCheck the [warnings report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.'
          })