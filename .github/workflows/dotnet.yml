name: dotnet

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  VERSION: 1.0.0

jobs:
  build:

    runs-on: ubuntu-latest # [self-hosted, linux, x64]

    env:
        NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
        DOTNET_ROOT: ${{ github.workspace }}/dotnet  # Define a writable directory for .NET
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup .NET 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Setup SonarCloud
      run:  dotnet tool install --global dotnet-sonarscanner

    - name: Setup ReportGenerator
      run:  dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Install npm
      run:  |
        npm install -g rimraf
      shell: bash

    - name: SonarCloud Scanner
      run:  >
        dotnet sonarscanner begin
        /o:"wangkanai"
        /k:"wangkanai_github"
        /s:${{ github.workspace }}/SonarQube.Analysis.xml
        /v:${{ env.VERSION }}
        /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        /d:sonar.host.url="https://sonarcloud.io"
        /d:sonar.scanner.skipJreProvisioning=true
        /d:sonar.scanner.scanAll=false
        /d:sonar.cs.opencover.reportsPaths=coverage/coverage.opencover.xml

    - name: Restore dependencies
      run:  dotnet restore

    - name: Build
      run:  dotnet build --no-restore --no-incremental

    - name: Test with Coverage
      run:  |
        dotnet test --no-build --verbosity normal \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat=opencover,cobertura \
          /p:CoverletOutput=./coverage/ \
          /p:MergeWith=./coverage/coverage.json \
          /p:SkipAutoProps=true

    - name: SonarCloud Submit
      run:  dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
