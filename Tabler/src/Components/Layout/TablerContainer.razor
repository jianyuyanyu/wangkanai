@* Copyright (c) 2014-2025 Sarin Na Wangkanai, All Rights Reserved. *@
@namespace Wangkanai.Tabler.Components
@inherits ComponentBase
@using Wangkanai.Tabler.Models

<div class="@CssClass" @attributes="AdditionalAttributes">
    @ChildContent
</div>

@code {
    /// <summary>
    /// The content to be rendered inside the container.
    /// </summary>
    [Parameter] public RenderFragment? ChildContent { get; set; }

    /// <summary>
    /// Additional HTML attributes to be applied to the container element.
    /// </summary>
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object>? AdditionalAttributes { get; set; }

    /// <summary>
    /// The type of container to render. Determines the responsive behavior and max-width.
    /// </summary>
    [Parameter] public ContainerType Type { get; set; } = ContainerType.Default;

    /// <summary>
    /// Additional CSS classes to apply to the container.
    /// </summary>
    [Parameter] public string? AdditionalCssClass { get; set; }

    /// <summary>
    /// Gets the computed CSS class string for the container.
    /// </summary>
    private string CssClass
    {
        get
        {
            var classes = new List<string> { GetContainerClass() };

            if (!string.IsNullOrWhiteSpace(AdditionalCssClass))
            {
                foreach (var cssClass in AdditionalCssClass.Split(' ', StringSplitOptions.RemoveEmptyEntries))
                {
                    classes.Add(cssClass);
                }
            }

            return string.Join(" ", classes).Trim();
        }
    }

    /// <summary>
    /// Gets the base container CSS class based on the container type.
    /// </summary>
    private string GetContainerClass() => Type switch
    {
        ContainerType.Fluid => "container-fluid",
        ContainerType.Small => "container-sm",
        ContainerType.Medium => "container-md",
        ContainerType.Large => "container-lg",
        ContainerType.ExtraLarge => "container-xl",
        ContainerType.ExtraExtraLarge => "container-xxl",
        _ => "container" // Default responsive container
    };
}